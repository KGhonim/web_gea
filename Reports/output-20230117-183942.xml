<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.1 (Python 3.9.6 on win32)" generated="20230117 18:39:42.090" rpa="false" schemaversion="3">
<suite id="s1" name="Smoke Test Execution" source="D:\Automation\GEA\Tests\APITest.robot">
<test id="s1-t1" name="Verify Login by user" line="10">
<kw name="User Login" library="ConfigurationModule">
<arg>${Username}</arg>
<arg>${Password}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>Login</arg>
<arg>${host}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230117 18:39:42.776" level="INFO">Creating Session using : alias=Login, url=http://10.0.96.9:44350, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230117 18:39:42.776" endtime="20230117 18:39:42.776"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${data}</var>
<arg>{'Username': (None, '${Username}'), 'Password': (None, '${Password}')}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230117 18:39:42.777" level="INFO">${data} = {'Username': (None, 'config'), 'Password': (None, 'M@n0PwD')}</msg>
<status status="PASS" starttime="20230117 18:39:42.777" endtime="20230117 18:39:42.777"/>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<var>${response}</var>
<arg>Login</arg>
<arg>${login_serviceName}</arg>
<arg>files=${data}</arg>
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<msg timestamp="20230117 18:39:52.611" level="INFO">Post Request using : alias=Login, uri=/managerlogin, data=&lt;empty&gt;, headers=None, files={'Username': (None, 'config'), 'Password': (None, 'M@n0PwD')}, allow_redirects=True </msg>
<msg timestamp="20230117 18:39:52.611" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230117 18:39:42.777" endtime="20230117 18:39:52.611"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230117 18:39:52.612" endtime="20230117 18:39:52.614"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230117 18:39:52.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230117 18:39:52.614" endtime="20230117 18:39:52.616"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${token}</var>
<arg>${response.json()}[Token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230117 18:39:52.618" level="INFO">${token} = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6ImNvbmZpZyIsIk5hbWUiOiJjb25maWciLCJQYXNzIjoiTUBuMFB3RCIsIklEIjoiMjhhODAxZjktODNlMy00MDlmLWE1MjQtNDUxZWY0OTZmOTA0IiwibmJmIjoxNjczOTcwMDUyLCJleHA...</msg>
<status status="PASS" starttime="20230117 18:39:52.616" endtime="20230117 18:39:52.618"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=Bearer ${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230117 18:39:52.623" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6ImNvbmZpZyIsIk5hbWUiOiJjb25maWciLCJQYXNzIjoiTUBuMFB3RCIsIklEIjoiMjhhODAxZjktODNlMy00MDlmLWE1MjQtNDUxZWY0OTZmOTA0Iiwib...</msg>
<status status="PASS" starttime="20230117 18:39:52.623" endtime="20230117 18:39:52.623"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230117 18:39:52.624" level="INFO">${headers} = {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6ImNvbmZpZyIsIk5hbWUiOiJjb25maWciLCJQYXNzIjoiTUBuMFB3RCIsIklEIjoiMjhhODAxZjktODNlM...</msg>
<status status="PASS" starttime="20230117 18:39:52.624" endtime="20230117 18:39:52.624"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>ConfigUser</arg>
<arg>${host}</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230117 18:39:52.625" level="INFO">Creating Session using : alias=ConfigUser, url=http://10.0.96.9:44350, headers={'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6ImNvbmZpZyIsIk5hbWUiOiJjb25maWciLCJQYXNzIjoiTUBuMFB3RCIsIklEIjoiMjhhODAxZjktODNlMy00MDlmLWE1MjQtNDUxZWY0OTZmOTA0IiwibmJmIjoxNjczOTcwMDUyLCJleHAiOjE2NzQwMDYwNTIsImlhdCI6MTY3Mzk3MDA1MiwiaXNzIjoiR0VBLVdFQi1QUk8tSXNzdWVyIiwiYXVkIjoiR0VBLVdFQl9QUk8tQXVkaWVuY2UifQ.0PbkqIuo6UdVODOvWrCw7OshrGSH348U1usbJl-XfTE'},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230117 18:39:52.624" endtime="20230117 18:39:52.626"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${token}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230117 18:39:52.626" endtime="20230117 18:39:52.628"/>
</kw>
<status status="PASS" starttime="20230117 18:39:42.776" endtime="20230117 18:39:52.628"/>
</kw>
<doc>Login with valid Config user credentials</doc>
<tag>Positive</tag>
<tag>Regression</tag>
<tag>Smoke</tag>
<tag>TC01</tag>
<status status="PASS" starttime="20230117 18:39:42.775" endtime="20230117 18:39:52.629"/>
</test>
<test id="s1-t2" name="Verify Active Directory Connection" line="17">
<kw name="Active Directory Connect" library="ConfigurationModule">
<arg>${LDAPPath}</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${data}</var>
<arg>LDAPPath=${LDAPPath}</arg>
<arg>LDAPUSer=${LDAPUSer}</arg>
<arg>LDAPPWD=${LDAPPWD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230117 18:39:52.634" level="INFO">${data} = {'LDAPPath': 'LDAP://10.0.1.93', 'LDAPUSer': 'config', 'LDAPPWD': 'M@n0PwD'}</msg>
<status status="PASS" starttime="20230117 18:39:52.633" endtime="20230117 18:39:52.634"/>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<var>${response}</var>
<arg>ConfigUser</arg>
<arg>${AD_serviceName}</arg>
<arg>json=${data}</arg>
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<msg timestamp="20230117 18:39:53.340" level="INFO">Post Request using : alias=ConfigUser, uri=/api/config/ActiveDirectory, data=&lt;empty&gt;, headers=None, files=None, allow_redirects=True </msg>
<msg timestamp="20230117 18:39:53.340" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230117 18:39:52.634" endtime="20230117 18:39:53.341"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230117 18:39:53.342" endtime="20230117 18:39:53.346"/>
</kw>
<status status="PASS" starttime="20230117 18:39:52.632" endtime="20230117 18:39:53.346"/>
</kw>
<doc>check AD Connection before ADD</doc>
<tag>Positive</tag>
<tag>Regression</tag>
<tag>Smoke</tag>
<tag>TC02</tag>
<status status="PASS" starttime="20230117 18:39:52.631" endtime="20230117 18:39:53.347"/>
</test>
<status status="PASS" starttime="20230117 18:39:42.093" endtime="20230117 18:39:53.352"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">Positive</stat>
<stat pass="2" fail="0" skip="0">Regression</stat>
<stat pass="2" fail="0" skip="0">Smoke</stat>
<stat pass="1" fail="0" skip="0">TC01</stat>
<stat pass="1" fail="0" skip="0">TC02</stat>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="Smoke Test Execution">Smoke Test Execution</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
